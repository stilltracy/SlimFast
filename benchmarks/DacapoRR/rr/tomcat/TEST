#!/bin/bash


echo "PREP"
rm -rf scratch
mkdir scratch
cp ../../dat/tomcat.zip scratch
cd scratch
unzip tomcat.zip
cd ..


# Patch in code to handle this properly now:
# 
# The following cannot be instrumented, because they *always* get
# stuck in an infinite recusion and overflow the stack, violating the
# RR assumption that the program performs no jvm-level illegal
# operations.  Our options are to bulletproof every entry point into
# RR, since where exactly the StackOverflow exception is generated is
# JVM-dependent, or to not instrument the offending methods.
#
# See: http://sourceforge.net/p/dacapobench/bugs/68/
#
#BAD_METHODS="-methods=-.*IntrospectionUtils.setProperty.* -methods=-.*NioEndpoint.setProperty.*"


echo Compile Patch
javac   -target 1.6 -source 1.6  -d scratch/lib -classpath scratch/lib/tomcat-coyote.jar:../../jar/dacapo-tomcat.jar:../../jar/bootstrap.jar:../../jar/tomcat-juli.jar:../../jar/commons-daemon.jar:../../jar/commons-httpclient.jar:../../jar/commons-logging.jar:../../jar/commons-codec.jar:  org/apache/tomcat/util/*.java org/apache/tomcat/util/net/NioEndpoint.java

echo Adding patch to Jar scratch/lib/tomcat-coyote.jar
cd scratch/lib
jar uf tomcat-coyote.jar org
cd -

echo "PREP DONE"

#
# RR fails because of dynamic class loading issues.  These classes are
# accessed in multiple loaders, and RR can't properly generate the accessors
# for them.
BAD_FIELDS="-fields=-.*javax/servlet/GenericServlet.config.* -fields=-.*javax/servlet/jsp/tagext/TagSupport.* "

TOMCAT_CLASSPATH=../../jar/dacapo-tomcat.jar:../../jar/bootstrap.jar:../../jar/tomcat-juli.jar:../../jar/commons-daemon.jar:../../jar/commons-httpclient.jar:../../jar/commons-logging.jar:../../jar/commons-codec.jar:


#
# Loads many std libraries, so tools will report a lot of errors on
# this program.
#
i=0
args=""
t=""
for arg in "$@"
do
        if [ "$i" = "0" ]
        then
                t="$arg"
        else
                args="$args $arg"
        fi
        i=`expr $i + 1`
done

echo $t
ARGS="$t ${ARGS}"

env CLASSPATH="$TOMCAT_CLASSPATH" rrrun -classpath=${TOMCAT_CLASSPATH}:classes ${BAD_METHODS} ${BAD_FIELDS} \
    -classes="+javax..*" \
   -multiLoader \
   -shadowThread="-.*" -infThreads=3 -maxTid=90 $args Main $t
